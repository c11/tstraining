<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 skinClass="org.larse.skin.VertexPanelSkin"
		 xmlns:parsley="http://www.spicefactory.org/parsley"
		 width="400" height="300">
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="plot_load_all_chip",type="org.larse.events.ImageListEvent")]
		[Event(name="save_plot", type="org.larse.events.PlotEvent")]
		[Event(name="load_vertices_history", type="org.larse.events.PlotEvent")]
		[ManagedEvents("plot_load_all_chip,save_plot,load_vertices_history")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			
			import org.larse.events.ImageListEvent;
			import org.larse.events.PlotEvent;
			import org.larse.model.GlobalModel;
			import org.larse.model.ImageListModel;
			import org.larse.model.PlotModel;
			import org.larse.tsclass.ImageChip;
			import org.spicefactory.parsley.core.context.Context;
			
			private var _vertexOnly:Boolean = false;
			
			[Inject]
			public var context:Context;
			
			[Inject]
			public var imageListModel:ImageListModel;
			
			[Inject]
			public var global:GlobalModel;
			
			[Inject][Bindable]
			public var plotModel:PlotModel;
			
			[Bindable]
			public function get vertexOnly():Boolean {
				return _vertexOnly;
			}
			public function set vertexOnly(value:Boolean):void {
				_vertexOnly = value;
				refresh();
			}
			
			private var _chipSelected:Boolean = false;
			[Bindable]
			public function get chipSelected():Boolean {
				return _chipSelected;
			}
			
			public function set chipSelected(value:Boolean):void {
				if (_chipSelected != value)
					_chipSelected = value;
			}

			private var _chips:ArrayCollection = new ArrayCollection();

			[Bindable]
			public function get chips():ArrayCollection {
				return _chips;
			}
			public function set chips(value:ArrayCollection):void {
				_chips = value;
				_chips.filterFunction = filterChips;
			}

			
			private function filterChips(item:Object):Boolean {
				if (vertexOnly) 
					return (item as ImageChip).isVertex;
				else
					return true;
			}
			
			public function refresh():void {
				chips.refresh();
				
				var ofv:IFactory = chipList.itemRenderer;
				chipList.itemRenderer = null;
				chipList.itemRenderer = ofv;
			}
			
			public function loadAllChips():void {
				var chip:ImageChip = chipList.selectedItem as ImageChip;
				global.selectedChip = chip;
				
				if (chip == null)
					return;

				//May 27, 2013
				/*
				There is a possiblity that the database could have corrupted vertex
				due to overriding chip images. This will happen with the following sequence
				1. remove a vertex
				2. override the chip
				
				To fix this problem, an explicit save is added to the before loading the chips,
				this way, any change to vertex will be saved first to the database and subsequently
				overriding chips will not have problem.
				*/
				var pevent:PlotEvent = new PlotEvent(PlotEvent.PLOT_SAVE, plotModel.currentPlot);
				this.dispatchEvent(pevent);

				//now continue to load all chips
				var data:Object = {project_id: chip.project_id, tsa: chip.tsa, plotid:chip.plotid, year:chip.year};
				
				var evt:ImageListEvent = new ImageListEvent(ImageListEvent.PLOT_LOAD_ALL_CHIP, data);
				dispatchEvent(evt);
				
				var chipwin:ChipWindow = new ChipWindow();
				chipwin.title = "TSA: " + chip.tsa + " Plot: " + chip.plotid + "    Year: " + chip.year + (global.target_day > 0 ? ("    Target Day: " + global.target_day) : "");;
				chipwin.resizeEnabled = true;
				chipwin.mouseEnabled = true;
				chipwin.enforceBoundaries = false;
				chipwin.imageListModel = imageListModel;
				
				context.viewManager.addViewRoot(chipwin);
				
				PopUpManager.addPopUp(chipwin, this);
				PopUpManager.centerPopUp(chipwin);		
			}
			
			//load all image chips for currently selected year
			protected function chipList_clickHandler(event:MouseEvent):void {
				chipSelected = chipList.selectedIndex >= 0;
				//user is request to load all chips
				if (event.ctrlKey && chipList.selectedIndex >= 0) {
					loadAllChips();
				}
			}
			
			/**
			 * load interpretation history for current plot in a separate window
			 * 
			 */
			public function loadHistory():void {
				var evt:PlotEvent = new PlotEvent(PlotEvent.LOAD_VERTEX_HISTORY, plotModel.currentPlot);
				dispatchEvent(evt);
			}			
			
		]]>
	</fx:Script>
	<s:List id="chipList" x="0" y="0" 
			minWidth="5" minHeight="5" 
			width="100%" height="100%" 
			allowMultipleSelection="false"
			dataProvider="{chips}"
			skinClass="org.larse.skin.ChipSkin"
			click="chipList_clickHandler(event)"
			/>
</s:Panel>
